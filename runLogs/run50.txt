body len = 13
header len = 3
body opener = "`"
body closer = "`"
OPCODE DATA

Flag Names: ['special', 'isRegister', 'isNonNull']

Flag Codes:
{   '000': {   'code': '0000',
               'default body': '0000000000000',
               'execute?': False,
               'interpret body': <function Opcodes.<lambda> at 0x7f3c47c0a7b8>,
               'name': 'uninitialized block',
               'symbol': '░',
               'type': 'uninitialized'},
    '001': {   'code': None,
               'default body': None,
               'execute?': True,
               'interpret body': <function Opcodes.<lambda> at 0x7f3c47c0ab70>,
               'name': 'instruction block',
               'symbol': None,
               'type': 'instruction'},
    '010': {   'code': 'REGn',
               'default body': '0000000000000',
               'execute?': False,
               'interpret body': <function Opcodes.<lambda> at 0x7f3c47c0a8c8>,
               'name': 'register with a null value',
               'symbol': '_',
               'type': 'register'},
    '011': {   'code': 'REG#',
               'default body': '0000000000000',
               'execute?': False,
               'interpret body': <function Opcodes.<lambda> at 0x7f3c47c0a840>,
               'name': 'register',
               'symbol': '#',
               'type': 'register'},
    '100': {   'code': 'EXEn',
               'default body': '0000000000000',
               'execute?': False,
               'interpret body': <function Opcodes.<lambda> at 0x7f3c47c0aae8>,
               'name': 'dormant executor',
               'symbol': '◇',
               'type': 'executor'},
    '101': {   'code': 'EXEC',
               'default body': '0000000000000',
               'execute?': False,
               'interpret body': <function Opcodes.<lambda> at 0x7f3c47c0aa60>,
               'name': 'executor',
               'symbol': '◈',
               'type': 'executor'},
    '110': {   'code': 'DMPn',
               'default body': '0000000000000',
               'execute?': False,
               'interpret body': <function Opcodes.<lambda> at 0x7f3c47c0a9d8>,
               'name': 'dump register with a null value',
               'symbol': '█',
               'type': 'dump register'},
    '111': {   'code': 'DUMP',
               'default body': '1111111111111',
               'execute?': False,
               'interpret body': <function Opcodes.<lambda> at 0x7f3c47c0a950>,
               'name': 'dump register',
               'symbol': '▯',
               'type': 'dump register'}}


Instruction Codes:
[   {   'arg count': 0,
        'code': 'NOOP',
        'description': 'No operation',
        'function': <function noOp at 0x7f3c47c09268>,
        'symbol': ' ',
        'type': 'noop'},
    {   'arg count': 0,
        'code': 'ARG0',
        'description': 'No operation. Modifies registers to be used by '
                       'previous instruction',
        'function': <function noOp at 0x7f3c47c09268>,
        'symbol': '0',
        'type': 'arg'},
    {   'arg count': 0,
        'code': 'ARG1',
        'description': 'No operation. Modifies registers to be used by '
                       'previous instruction',
        'function': <function noOp at 0x7f3c47c09268>,
        'symbol': '1',
        'type': 'arg'},
    {   'arg count': 0,
        'code': 'ARG2',
        'description': 'No operation. Modifies registers to be used by '
                       'previous instruction',
        'function': <function noOp at 0x7f3c47c09268>,
        'symbol': '2',
        'type': 'arg'},
    {   'arg count': 0,
        'code': 'ARG3',
        'description': 'No operation. Modifies registers to be used by '
                       'previous instruction',
        'function': <function noOp at 0x7f3c47c09268>,
        'symbol': '3',
        'type': 'arg'},
    {   'arg count': 0,
        'code': 'ARG4',
        'description': 'No operation. Modifies registers to be used by '
                       'previous instruction',
        'function': <function noOp at 0x7f3c47c09268>,
        'symbol': '4',
        'type': 'arg'},
    {   'arg count': 0,
        'code': 'ARG5',
        'description': 'No operation. Modifies registers to be used by '
                       'previous instruction',
        'function': <function noOp at 0x7f3c47c09268>,
        'symbol': '5',
        'type': 'arg'},
    {   'arg count': 0,
        'code': 'ARG6',
        'description': 'No operation. Modifies registers to be used by '
                       'previous instruction',
        'function': <function noOp at 0x7f3c47c09268>,
        'symbol': '6',
        'type': 'arg'},
    {   'arg count': 0,
        'code': 'ARG7',
        'description': 'No operation. Modifies registers to be used by '
                       'previous instruction',
        'function': <function noOp at 0x7f3c47c09268>,
        'symbol': '7',
        'type': 'arg'},
    {   'arg count': 0,
        'code': 'ARG8',
        'description': 'No operation. Modifies registers to be used by '
                       'previous instruction',
        'function': <function noOp at 0x7f3c47c09268>,
        'symbol': '8',
        'type': 'arg'},
    {   'arg count': 0,
        'code': 'ARG9',
        'description': 'No operation. Modifies registers to be used by '
                       'previous instruction',
        'function': <function noOp at 0x7f3c47c09268>,
        'symbol': '9',
        'type': 'arg'},
    {   'arg count': 1,
        'code': 'JMPR',
        'description': 'Jump to the address in r0.',
        'function': <function jumpR at 0x7f3c47c092f0>,
        'symbol': '%',
        'type': 'jump'},
    {   'arg count': 0,
        'code': 'JMPB',
        'description': 'Jump backwards to the first lock matching the '
                       'following key',
        'function': <function jumpB at 0x7f3c47c09378>,
        'symbol': '(',
        'type': 'jump'},
    {   'arg count': 0,
        'code': 'JMPF',
        'description': 'Jump forwards to the first lock matching the following '
                       'key',
        'function': <function jumpF at 0x7f3c47c09400>,
        'symbol': ')',
        'type': 'jump'},
    {   'arg count': 1,
        'code': 'ADRB',
        'description': 'Look backwards to the first lock matching the '
                       'following key, store its address in r0',
        'function': <function addressOfJumpB at 0x7f3c47c09488>,
        'symbol': '[',
        'type': 'lookaround'},
    {   'arg count': 1,
        'code': 'ADRF',
        'description': 'Look forwards to the first lock matching the following '
                       'key, store its address in r0',
        'function': <function addressOfJumpF at 0x7f3c47c09510>,
        'symbol': ']',
        'type': 'lookaround'},
    {   'arg count': 3,
        'code': 'SERB',
        'description': 'Starting from [r0], look backwards for the first '
                       'instruction matching the instruction at [r1], store '
                       'its address in r2',
        'function': <function addressOfInstructionB at 0x7f3c47c09598>,
        'symbol': '<',
        'type': 'lookaround'},
    {   'arg count': 3,
        'code': 'SERF',
        'description': 'Starting from [r0], look forwards for the first '
                       'instruction matching the instruction at [r1], store '
                       'its address in r2',
        'function': <function addressOfInstructionF at 0x7f3c47c09620>,
        'symbol': '>',
        'type': 'lookaround'},
    {   'arg count': 1,
        'code': 'IFNZ',
        'description': 'if [r0] is not 0, execute the following instruction, '
                       'otherwise, skip to the next non-argument instruction',
        'function': <function skipIfZero at 0x7f3c47c096a8>,
        'symbol': '?',
        'type': 'if'},
    {   'arg count': 1,
        'code': 'IFNN',
        'description': 'if [r0] is not null, execute the following '
                       'instruction, otherwise, skip to the next non-argument '
                       'instruction',
        'function': <function skipIfNull at 0x7f3c47c09730>,
        'symbol': '‽',
        'type': 'if'},
    {   'arg count': 0,
        'code': 'IFDZ',
        'description': 'if the instruction at the address in r0 is the same as '
                       "the instruction at the address in r1 (or if they're "
                       'both registers, dump registers, or executors), execute '
                       'the next instruction, otherwise, skip to the next '
                       'non-argument instruction',
        'function': <function skipIfDumpIsZero at 0x7f3c47c097b8>,
        'symbol': '¿',
        'type': 'if'},
    {   'arg count': 2,
        'code': 'IFBE',
        'description': 'if the instruction at the address in r0 is the same as '
                       "the instruction at the address in r1 (or if they're "
                       'both registers, dump registers, or executors), execute '
                       'the next instruction, otherwise, skip to the next '
                       'non-argument instruction',
        'function': <function skipUnlessEquiv at 0x7f3c47c09840>,
        'symbol': '⸘',
        'type': 'if'},
    {   'arg count': 2,
        'code': 'IFEQ',
        'description': 'if [r0] == [r1], execute the next instruction, '
                       'otherwise, skip to the next non-argument instruction',
        'function': <function skipUnlessEqual at 0x7f3c47c098c8>,
        'symbol': '=',
        'type': 'if'},
    {   'arg count': 3,
        'code': 'ADDr',
        'description': "Add registers' contents ([r0] = [r1] + [r2])",
        'function': <function add at 0x7f3c47c09950>,
        'symbol': '+',
        'type': 'arithmetic'},
    {   'arg count': 3,
        'code': 'SUBr',
        'description': "Subtract registers' contents ([r0] = [r1] - [r2])",
        'function': <function subtract at 0x7f3c47c099d8>,
        'symbol': '-',
        'type': 'arithmetic'},
    {   'arg count': 3,
        'code': 'MULr',
        'description': "Multiply registers' contents ([r0] = [r1] * [r2])",
        'function': <function multiply at 0x7f3c47c09a60>,
        'symbol': '*',
        'type': 'arithmetic'},
    {   'arg count': 3,
        'code': 'DIVr',
        'description': "Divide registers' contents ([r0] = [r1] ÷ [r2])",
        'function': <function divide at 0x7f3c47c09ae8>,
        'symbol': '÷',
        'type': 'arithmetic'},
    {   'arg count': 1,
        'code': 'INCr',
        'description': "Increment register's contents ([r0]++)",
        'function': <function increment at 0x7f3c47c09d90>,
        'symbol': '^',
        'type': 'arithmetic'},
    {   'arg count': 1,
        'code': 'DECr',
        'description': "Decrement register's contents ([r0]--)",
        'function': <function decrement at 0x7f3c47c09e18>,
        'symbol': 'v',
        'type': 'arithmetic'},
    {   'arg count': 1,
        'code': 'NOTr',
        'description': "Bitwise NOT register's contents ([r0] = ![r0])",
        'function': <function bitwiseInverse at 0x7f3c47c09ea0>,
        'symbol': '!',
        'type': 'bitwise'},
    {   'arg count': 1,
        'code': 'SHFL',
        'description': "Bitwise left shift register's contents ([r0] = [r0] << "
                       '1)',
        'function': <function bitwiseShiftLeft at 0x7f3c47c09f28>,
        'symbol': '«',
        'type': 'bitwise'},
    {   'arg count': 1,
        'code': 'SHFR',
        'description': "Bitwise right shift register's contents ([r0] = [r0] "
                       '>> 1)',
        'function': <function bitwiseShiftRight at 0x7f3c47c0a048>,
        'symbol': '»',
        'type': 'bitwise'},
    {   'arg count': 3,
        'code': 'ANDr',
        'description': "Bitwise AND register's contents ([r0] = [r1] & [r2])",
        'function': <function bitwiseAND at 0x7f3c47c09b70>,
        'symbol': '&',
        'type': 'bitwise'},
    {   'arg count': 3,
        'code': 'ORr-',
        'description': "Bitwise OR register's contents ([r0] = [r1] | [r2])",
        'function': <function bitwiseOR at 0x7f3c47c09bf8>,
        'symbol': '|',
        'type': 'bitwise'},
    {   'arg count': 3,
        'code': 'XORr',
        'description': "Bitwise XOR register's contents ([r0] = [r1] ^ [r2])",
        'function': <function bitwiseXOR at 0x7f3c47c09c80>,
        'symbol': '⊕',
        'type': 'bitwise'},
    {   'arg count': 1,
        'code': 'ZERO',
        'description': 'Set register contents to 0 ([r0] = 0)',
        'function': <function setToZero at 0x7f3c47c0a0d0>,
        'symbol': 'z',
        'type': 'set'},
    {   'arg count': 1,
        'code': 'UNIT',
        'description': 'Set register contents to 1 ([r0] = 1)',
        'function': <function setToOne at 0x7f3c47c0a158>,
        'symbol': 'u',
        'type': 'set'},
    {   'arg count': 1,
        'code': 'RAND',
        'description': 'Sets [r0] to a random valid address.',
        'function': <function setToRand at 0x7f3c47c0a268>,
        'symbol': 'r',
        'type': 'set'},
    {   'arg count': 1,
        'code': 'NULL',
        'description': 'Sets [r0] to null.',
        'function': <function setToNull at 0x7f3c47c0a1e0>,
        'symbol': 'n',
        'type': 'set'},
    {   'arg count': 2,
        'code': 'CPYr',
        'description': 'Copy [r0] into r1',
        'function': <function copy at 0x7f3c47c0a378>,
        'symbol': '"',
        'type': 'clone/swap'},
    {   'arg count': 2,
        'code': 'SWPr',
        'description': 'Swap [r0] into r1 and [r1] into r0',
        'function': <function swap at 0x7f3c47c0a400>,
        'symbol': 'x',
        'type': 'clone/swap'},
    {   'arg count': 1,
        'code': 'POPr',
        'description': 'Pop into r0 a value from the first stack found '
                       'immediately after the first matching lock found after '
                       'this executor',
        'function': <function pop at 0x7f3c47c0a510>,
        'symbol': '↑',
        'type': 'stack'},
    {   'arg count': 1,
        'code': 'PSHr',
        'description': 'Push [r0] to the first stack found immediately after '
                       'the first matching lock found after this executor',
        'function': <function push at 0x7f3c47c0a488>,
        'symbol': '↓',
        'type': 'stack'},
    {   'arg count': 0,
        'code': 'CLAM',
        'description': "A claim marker, used to stake an executor's territory; "
                       'the boundaries of an organism. Also functions as lock.',
        'function': <function noOp at 0x7f3c47c09268>,
        'symbol': 'T',
        'type': 'lock'},
    {   'arg count': 0,
        'code': 'CLMk',
        'description': 'A claim marker key, matches to a claim marker.',
        'function': <function noOp at 0x7f3c47c09268>,
        'symbol': 't',
        'type': 'key'},
    {   'arg count': 2,
        'code': 'MNTR',
        'description': 'Sets [r0] to the address most recently checked within '
                       "this executor's claim boundaries, and [r1] to the "
                       'address of the instruction that checked it. Both are '
                       'set to null if no checks have been recently made.',
        'function': <function monitor at 0x7f3c47c0a620>,
        'symbol': '~',
        'type': 'monitor'},
    {   'arg count': 2,
        'code': 'ADRS',
        'description': 'Swap the memory block at [r0] with the block at [r1]',
        'function': <function swapMemoryBlocks at 0x7f3c47c0a598>,
        'symbol': '$',
        'type': 'memwrite'},
    {   'arg count': 1,
        'code': 'INIT',
        'description': 'Initializes the executor at the address contained in '
                       'r0. (Sets it to non-dormant and sets its instruction '
                       'pointer to itself.)',
        'function': <function initializeExecutor at 0x7f3c47c0a6a8>,
        'symbol': ':',
        'type': 'init'},
    {   'arg count': 1,
        'code': 'DINT',
        'description': 'Denitializes the executor at the address contained in '
                       'r0. (Sets it to dormant.)',
        'function': <function denitializeExecutor at 0x7f3c47c0a730>,
        'symbol': '.',
        'type': 'deinit'},
    {   'arg count': 0,
        'code': 'KEYA',
        'description': 'A key used by some instructions to find a matching '
                       'upper case lock',
        'function': <function noOp at 0x7f3c47c09268>,
        'symbol': 'a',
        'type': 'key'},
    {   'arg count': 0,
        'code': 'KEYB',
        'description': 'A key used by some instructions to find a matching '
                       'upper case lock',
        'function': <function noOp at 0x7f3c47c09268>,
        'symbol': 'b',
        'type': 'key'},
    {   'arg count': 0,
        'code': 'KEYC',
        'description': 'A key used by some instructions to find a matching '
                       'upper case lock',
        'function': <function noOp at 0x7f3c47c09268>,
        'symbol': 'c',
        'type': 'key'},
    {   'arg count': 0,
        'code': 'KEYD',
        'description': 'A key used by some instructions to find a matching '
                       'upper case lock',
        'function': <function noOp at 0x7f3c47c09268>,
        'symbol': 'd',
        'type': 'key'},
    {   'arg count': 0,
        'code': 'KEYE',
        'description': 'A key used by some instructions to find a matching '
                       'upper case lock',
        'function': <function noOp at 0x7f3c47c09268>,
        'symbol': 'e',
        'type': 'key'},
    {   'arg count': 0,
        'code': 'KEYF',
        'description': 'A key used by some instructions to find a matching '
                       'upper case lock',
        'function': <function noOp at 0x7f3c47c09268>,
        'symbol': 'f',
        'type': 'key'},
    {   'arg count': 0,
        'code': 'KEYG',
        'description': 'A key used by some instructions to find a matching '
                       'upper case lock',
        'function': <function noOp at 0x7f3c47c09268>,
        'symbol': 'g',
        'type': 'key'},
    {   'arg count': 0,
        'code': 'KEYH',
        'description': 'A key used by some instructions to find a matching '
                       'upper case lock',
        'function': <function noOp at 0x7f3c47c09268>,
        'symbol': 'h',
        'type': 'key'},
    {   'arg count': 0,
        'code': 'KEYI',
        'description': 'A key used by some instructions to find a matching '
                       'upper case lock',
        'function': <function noOp at 0x7f3c47c09268>,
        'symbol': 'i',
        'type': 'key'},
    {   'arg count': 0,
        'code': 'KEYJ',
        'description': 'A key used by some instructions to find a matching '
                       'upper case lock',
        'function': <function noOp at 0x7f3c47c09268>,
        'symbol': 'j',
        'type': 'key'},
    {   'arg count': 0,
        'code': 'KEYK',
        'description': 'A key used by some instructions to find a matching '
                       'upper case lock',
        'function': <function noOp at 0x7f3c47c09268>,
        'symbol': 'k',
        'type': 'key'},
    {   'arg count': 0,
        'code': 'KEYL',
        'description': 'A key used by some instructions to find a matching '
                       'upper case lock',
        'function': <function noOp at 0x7f3c47c09268>,
        'symbol': 'l',
        'type': 'key'},
    {   'arg count': 0,
        'code': 'KEYM',
        'description': 'A key used by some instructions to find a matching '
                       'upper case lock',
        'function': <function noOp at 0x7f3c47c09268>,
        'symbol': 'm',
        'type': 'key'},
    {   'arg count': 0,
        'code': 'LOKA',
        'description': 'A lock used by some instructions to match to a lower '
                       'case key',
        'function': <function noOp at 0x7f3c47c09268>,
        'symbol': 'A',
        'type': 'lock'},
    {   'arg count': 0,
        'code': 'LOKB',
        'description': 'A lock used by some instructions to match to a lower '
                       'case key',
        'function': <function noOp at 0x7f3c47c09268>,
        'symbol': 'B',
        'type': 'lock'},
    {   'arg count': 0,
        'code': 'LOKC',
        'description': 'A lock used by some instructions to match to a lower '
                       'case key',
        'function': <function noOp at 0x7f3c47c09268>,
        'symbol': 'C',
        'type': 'lock'},
    {   'arg count': 0,
        'code': 'LOKD',
        'description': 'A lock used by some instructions to match to a lower '
                       'case key',
        'function': <function noOp at 0x7f3c47c09268>,
        'symbol': 'D',
        'type': 'lock'},
    {   'arg count': 0,
        'code': 'LOKE',
        'description': 'A lock used by some instructions to match to a lower '
                       'case key',
        'function': <function noOp at 0x7f3c47c09268>,
        'symbol': 'E',
        'type': 'lock'},
    {   'arg count': 0,
        'code': 'LOKF',
        'description': 'A lock used by some instructions to match to a lower '
                       'case key',
        'function': <function noOp at 0x7f3c47c09268>,
        'symbol': 'F',
        'type': 'lock'},
    {   'arg count': 0,
        'code': 'LOKG',
        'description': 'A lock used by some instructions to match to a lower '
                       'case key',
        'function': <function noOp at 0x7f3c47c09268>,
        'symbol': 'G',
        'type': 'lock'},
    {   'arg count': 0,
        'code': 'LOKH',
        'description': 'A lock used by some instructions to match to a lower '
                       'case key',
        'function': <function noOp at 0x7f3c47c09268>,
        'symbol': 'H',
        'type': 'lock'},
    {   'arg count': 0,
        'code': 'LOKI',
        'description': 'A lock used by some instructions to match to a lower '
                       'case key',
        'function': <function noOp at 0x7f3c47c09268>,
        'symbol': 'I',
        'type': 'lock'},
    {   'arg count': 0,
        'code': 'LOKJ',
        'description': 'A lock used by some instructions to match to a lower '
                       'case key',
        'function': <function noOp at 0x7f3c47c09268>,
        'symbol': 'J',
        'type': 'lock'},
    {   'arg count': 0,
        'code': 'LOKK',
        'description': 'A lock used by some instructions to match to a lower '
                       'case key',
        'function': <function noOp at 0x7f3c47c09268>,
        'symbol': 'K',
        'type': 'lock'},
    {   'arg count': 0,
        'code': 'LOKL',
        'description': 'A lock used by some instructions to match to a lower '
                       'case key',
        'function': <function noOp at 0x7f3c47c09268>,
        'symbol': 'L',
        'type': 'lock'},
    {   'arg count': 0,
        'code': 'LOKM',
        'description': 'A lock used by some instructions to match to a lower '
                       'case key',
        'function': <function noOp at 0x7f3c47c09268>,
        'symbol': 'M',
        'type': 'lock'}]


INITIAL SOUP
?k[ia^$>=÷t:]#?d!If»F)?~%+hua iet»0j◇6(bk*lIBj5ar%^h4=↑h ⊕M÷%1Ir%%÷Fmv.r«vCla&2↓
↑18*&le.T◈▯#####[t1]t3r"04B>‽2)c(tC$2=13)d^^1(bD^4:4(tTv957⊕v?JF2e(+1]kg]GEnln▯t
nGrMCl[#rt:.<◇d«%12-tCt"n0◇8d!H#$t3c¿9$3l<u&L)b*t↑^I5Kav[⸘jr2jj1↑-bgB&DMi~rMMj‽A
¿77Bt=tD8g?:^!6-:ie$&e(v↑Emag:8T»>Hk1GamdC9»9v 6k 4‽bzrfgJbL⸘FC9I↓fG0‽)$E7T3÷97c
«j]u↓5k?jx!:ae>a>3⊕⸘‽d*C#3u)?5jM[+fL2-↓btkD8dg2C0G"9t&rMC↓*f«H93fGjc⊕I8B↑↑g↓▯j»h
L8&↓⸘d*"tdJ"]]$Fzvz▯¿$>L=-4«$%86‽9*x)0-8⸘gnh$1]dE.=K|◇m↑fxIlG"L[4!-.⊕6B2ka.*.6Ad
T.zu◇3◇H"MJa[iL-+<G]&l>1)B%De»»lF3¿#L -(&znFI)↓L$ f◇▯▯ltuk7◇$◇AK«k3n÷Gk$kB-↓6-?)
J=i!F!c:!v )AB83¿ib|⸘(«k"«-Ilrj»6<hzrnA1#iiv»+*+&~ft1910^2Kkz>21i#)+dld[÷99v0¿H 
↓&C+vdHE49[+tL5! $c0e»9gGI(cB⸘%« Lc?#▯lC+=I2DM("i««B▯hxBg9)x↓g6a↓k%»‽»▯‽k3223%¿~
BD ME⊕!*x]!>jg -7▯jn9⸘◇luF"6)#Ih^J[5▯%mg«M?H⊕(K#6DA66b>Lx↓!K⊕fiJ+t:0»:.m»r&j7?bJ
#<h?]u ÷c↑ =H]).avf~a0r=L*z19T8|Hi÷lj^&D1IAn+(8[C ~4«zheG&ej+⊕g[⊕^cmiH‽D#I[Mmjr&
↓⊕»7j2M↑!?<~%⸘#LC"j1AKt◇xrt2Dc5:!?zjj⊕)^*f)c>:~5tg%.:k[? H◇B!ue^t+iH~J⊕I[k$÷:⸘bz
TC[l9¿⊕a¿kkT▯5bEEd=^n#!E.|#1ur&|HF3(me):

BODIES:
13	#`0`
36	◇`None`
89	◈`89`
90	▯`8191`
91	#`0`
92	#`0`
93	#`0`
94	#`0`
95	#`0`
158	▯`8191`
167	#`0`
173	◇`None`
186	◇`None`
191	#`0`
344	#`0`
396	▯`8191`
419	▯`8191`
453	◇`None`
484	◇`None`
486	◇`None`
515	#`0`
531	◇`None`
532	▯`8191`
533	▯`8191`
539	◇`None`
541	◇`None`
600	#`0`
625	#`0`
676	#`0`
677	▯`8191`
692	▯`8191`
710	▯`8191`
737	▯`8191`
742	◇`None`
749	#`0`
756	▯`8191`
767	#`0`
800	#`0`
872	#`0`
894	#`0`
903	◇`None`
938	◇`None`
972	▯`8191`
981	#`0`
986	#`0`

	
cycle 1
90	▯`8190`	BODY
89	◈`90`	BODY

	
cycle 2
90	▯`8189`	BODY
89	◈`91`	BODY

	
cycle 3
90	▯`8188`	BODY
91	#`0`	BODY
90	▯`8188`	BODY
89	◈`92`	BODY

	
cycle 4
90	▯`8187`	BODY
92	#`0`	BODY
90	▯`8187`	BODY
89	◈`93`	BODY

	
cycle 5
90	▯`8186`	BODY
93	#`0`	BODY
90	▯`8186`	BODY
89	◈`94`	BODY

	
cycle 6
90	▯`8185`	BODY
94	#`0`	BODY
90	▯`8185`	BODY
89	◈`95`	BODY

	
cycle 7
90	▯`8184`	BODY
95	#`0`	BODY
90	▯`8184`	BODY
89	◈`96`	BODY

	
cycle 8
90	▯`8095`	BODY
92	#`88`	BODY
90	▯`8095`	BODY
89	◈`97`	BODY

	
cycle 9
90	▯`8094`	BODY
89	◈`98`	BODY

	
cycle 10
90	▯`8093`	BODY
89	◈`99`	BODY

	
cycle 11
90	▯`7958`	BODY
94	#`134`	BODY
90	▯`7958`	BODY
89	◈`100`	BODY

	
cycle 12
90	▯`7957`	BODY
89	◈`101`	BODY

	
cycle 13
90	▯`7956`	BODY
89	◈`102`	BODY

	
cycle 14
90	▯`7295`	BODY
91	#`660`	BODY
90	▯`7295`	BODY
89	◈`103`	BODY

	
cycle 15
90	▯`6634`	BODY
95	#`660`	BODY
90	▯`6634`	BODY
89	◈`104`	BODY

	
cycle 16
90	▯`6633`	BODY
89	◈`105`	BODY

	
cycle 17
90	▯`6632`	BODY
89	◈`106`	BODY

	
cycle 18
90	▯`6631`	BODY
89	◈`107`	BODY

	
cycle 19
90	▯`5801`	BODY
93	#`829`	BODY
90	▯`5801`	BODY
89	◈`108`	BODY

	
cycle 20
90	▯`5800`	BODY
89	◈`109`	BODY

	
cycle 21
90	▯`5799`	BODY
89	◈`110`	BODY

	
cycle 22
90	▯`5795`	BODY
89	◈`114`	BODY

	
cycle 23
90	▯`5794`	BODY
89	◈`115`	BODY

	
cycle 24
90	▯`5793`	BODY
89	◈`116`	BODY
660	T	BLOCK
829	e	BLOCK

	
cycle 25
90	▯`5792`	BODY
89	◈`117`	BODY

	
cycle 26
90	▯`5788`	BODY
89	◈`121`	BODY

	
cycle 27
90	▯`5787`	BODY
89	◈`122`	BODY

	
cycle 28
90	▯`5785`	BODY
91	#`661`	BODY
90	▯`5785`	BODY
89	◈`123`	BODY

	
cycle 29
90	▯`5783`	BODY
92	#`89`	BODY
90	▯`5783`	BODY
89	◈`124`	BODY

	
cycle 30
90	▯`5782`	BODY
89	◈`125`	BODY

	
cycle 31
90	▯`5801`	BODY
89	◈`106`	BODY

	
cycle 32
90	▯`5800`	BODY
89	◈`107`	BODY

	
cycle 33
90	▯`5886`	BODY
93	#`742`	BODY
90	▯`5886`	BODY
89	◈`108`	BODY

	
cycle 34
90	▯`5885`	BODY
89	◈`109`	BODY

	
cycle 35
90	▯`5884`	BODY
89	◈`110`	BODY

	
cycle 36
90	▯`5880`	BODY
89	◈`114`	BODY

	
cycle 37
90	▯`5879`	BODY
89	◈`115`	BODY

	
cycle 38
90	▯`5878`	BODY
89	◈`116`	BODY
661	◇`None`	BLOCK
742	»	BLOCK

	
cycle 39
90	▯`5877`	BODY
89	◈`117`	BODY

	
cycle 40
90	▯`5873`	BODY
89	◈`121`	BODY

	
cycle 41
90	▯`5872`	BODY
89	◈`122`	BODY

	
cycle 42
90	▯`5870`	BODY
91	#`662`	BODY
90	▯`5870`	BODY
89	◈`123`	BODY

	
cycle 43
90	▯`5868`	BODY
92	#`90`	BODY
90	▯`5868`	BODY
89	◈`124`	BODY

	
cycle 44
90	▯`5867`	BODY
89	◈`125`	BODY

	
cycle 45
90	▯`5886`	BODY
89	◈`106`	BODY

	
cycle 46
90	▯`5885`	BODY
89	◈`107`	BODY

	
cycle 47
90	▯`5949`	BODY
93	#`677`	BODY
90	▯`5949`	BODY
89	◈`108`	BODY

	
cycle 48
90	▯`5948`	BODY
89	◈`109`	BODY

	
cycle 49
90	▯`5947`	BODY
89	◈`110`	BODY

	
cycle 50
90	▯`5943`	BODY
89	◈`114`	BODY

	
cycle 51
90	▯`5942`	BODY
89	◈`115`	BODY

	
cycle 52
90	▯`5941`	BODY
89	◈`116`	BODY
662	▯`8191`	BLOCK
677	9	BLOCK

	
cycle 53
90	▯`5940`	BODY
89	◈`117`	BODY

	
cycle 54
90	▯`5936`	BODY
89	◈`121`	BODY

	
cycle 55
90	▯`5935`	BODY
89	◈`122`	BODY

	
cycle 56
90	▯`5933`	BODY
91	#`663`	BODY
90	▯`5933`	BODY
89	◈`123`	BODY

	
cycle 57
90	▯`5931`	BODY
92	#`91`	BODY
90	▯`5931`	BODY
89	◈`124`	BODY

	
cycle 58
90	▯`5930`	BODY
89	◈`125`	BODY

	
cycle 59
90	▯`5949`	BODY
89	◈`106`	BODY

	
cycle 60
90	▯`5948`	BODY
89	◈`107`	BODY

	
cycle 61
90	▯`5948`	BODY
93	#`676`	BODY
90	▯`5948`	BODY
89	◈`108`	BODY

	
cycle 62
90	▯`5947`	BODY
89	◈`109`	BODY

	
cycle 63
90	▯`5946`	BODY
89	◈`110`	BODY

	
cycle 64
90	▯`5942`	BODY
89	◈`114`	BODY

	
cycle 65
90	▯`5941`	BODY
89	◈`115`	BODY

	
cycle 66
90	▯`5940`	BODY
89	◈`116`	BODY
663	#`0`	BLOCK
676	g	BLOCK

	
cycle 67
90	▯`5939`	BODY
89	◈`117`	BODY

	
cycle 68
90	▯`5935`	BODY
89	◈`121`	BODY

	
cycle 69
90	▯`5934`	BODY
89	◈`122`	BODY

	
cycle 70
90	▯`5932`	BODY
91	#`664`	BODY
90	▯`5932`	BODY
89	◈`123`	BODY

	
cycle 71
90	▯`5930`	BODY
92	#`92`	BODY
90	▯`5930`	BODY
89	◈`124`	BODY

	
cycle 72
90	▯`5929`	BODY
89	◈`125`	BODY

	
cycle 73
90	▯`5948`	BODY
89	◈`106`	BODY

	
cycle 74
90	▯`5947`	BODY
89	◈`107`	BODY

	
cycle 75
90	▯`5873`	BODY
93	#`749`	BODY
90	▯`5873`	BODY
89	◈`108`	BODY

	
cycle 76
90	▯`5872`	BODY
89	◈`109`	BODY

	
cycle 77
90	▯`5871`	BODY
89	◈`110`	BODY

	
cycle 78
90	▯`5867`	BODY
89	◈`114`	BODY

	
cycle 79
90	▯`5866`	BODY
89	◈`115`	BODY

	
cycle 80
90	▯`5865`	BODY
89	◈`116`	BODY
664	#`0`	BLOCK
749	G	BLOCK

	
cycle 81
90	▯`5864`	BODY
89	◈`117`	BODY

	
cycle 82
90	▯`5860`	BODY
89	◈`121`	BODY

	
cycle 83
90	▯`5859`	BODY
89	◈`122`	BODY

	
cycle 84
90	▯`5857`	BODY
91	#`665`	BODY
90	▯`5857`	BODY
89	◈`123`	BODY

	
cycle 85
90	▯`5855`	BODY
92	#`93`	BODY
90	▯`5855`	BODY
89	◈`124`	BODY

	
cycle 86
90	▯`5854`	BODY
89	◈`125`	BODY

	
cycle 87
90	▯`5873`	BODY
89	◈`106`	BODY

	
cycle 88
90	▯`5872`	BODY
89	◈`107`	BODY

	
cycle 89
90	▯`5853`	BODY
93	#`767`	BODY
90	▯`5853`	BODY
89	◈`108`	BODY

	
cycle 90
90	▯`5852`	BODY
89	◈`109`	BODY

	
cycle 91
90	▯`5851`	BODY
89	◈`110`	BODY

	
cycle 92
90	▯`5847`	BODY
89	◈`114`	BODY

	
cycle 93
90	▯`5846`	BODY
89	◈`115`	BODY

	
cycle 94
90	▯`5845`	BODY
89	◈`116`	BODY
665	#`0`	BLOCK
767	I	BLOCK

	
cycle 95
90	▯`5844`	BODY
89	◈`117`	BODY

	
cycle 96
90	▯`5840`	BODY
89	◈`121`	BODY

	
cycle 97
90	▯`5839`	BODY
89	◈`122`	BODY

	
cycle 98
90	▯`5837`	BODY
91	#`666`	BODY
90	▯`5837`	BODY
89	◈`123`	BODY

	
cycle 99
90	▯`5835`	BODY
92	#`94`	BODY
90	▯`5835`	BODY
89	◈`124`	BODY

	
cycle 100
90	▯`5834`	BODY
89	◈`125`	BODY

	
cycle 101
90	▯`5853`	BODY
89	◈`106`	BODY

	
cycle 102
90	▯`5852`	BODY
89	◈`107`	BODY

	
cycle 103
90	▯`5818`	BODY
93	#`800`	BODY
90	▯`5818`	BODY
89	◈`108`	BODY

	
cycle 104
90	▯`5817`	BODY
89	◈`109`	BODY

	
cycle 105
90	▯`5816`	BODY
89	◈`110`	BODY

	
cycle 106
90	▯`5812`	BODY
89	◈`114`	BODY

	
cycle 107
90	▯`5811`	BODY
89	◈`115`	BODY

	
cycle 108
90	▯`5810`	BODY
89	◈`116`	BODY
666	#`0`	BLOCK
800	(	BLOCK

	
cycle 109
90	▯`5809`	BODY
89	◈`117`	BODY

	
cycle 110
90	▯`5805`	BODY
89	◈`121`	BODY

	
cycle 111
90	▯`5804`	BODY
89	◈`122`	BODY

	
cycle 112
90	▯`5802`	BODY
91	#`667`	BODY
90	▯`5802`	BODY
89	◈`123`	BODY

	
cycle 113
90	▯`5800`	BODY
92	#`95`	BODY
90	▯`5800`	BODY
89	◈`124`	BODY

	
cycle 114
90	▯`5799`	BODY
89	◈`125`	BODY

	
cycle 115
90	▯`5818`	BODY
89	◈`106`	BODY

	
cycle 116
90	▯`5817`	BODY
89	◈`107`	BODY

	
cycle 117
90	▯`5744`	BODY
93	#`872`	BODY
90	▯`5744`	BODY
89	◈`108`	BODY

	
cycle 118
90	▯`5743`	BODY
89	◈`109`	BODY

	
cycle 119
90	▯`5742`	BODY
89	◈`110`	BODY

	
cycle 120
90	▯`5738`	BODY
89	◈`114`	BODY

	
cycle 121
90	▯`5737`	BODY
89	◈`115`	BODY

	
cycle 122
90	▯`5736`	BODY
89	◈`116`	BODY
667	#`0`	BLOCK
872	c	BLOCK

	
cycle 123
90	▯`5735`	BODY
89	◈`117`	BODY

	
cycle 124
90	▯`5731`	BODY
89	◈`121`	BODY

	
cycle 125
90	▯`5730`	BODY
89	◈`122`	BODY

	
cycle 126
90	▯`5728`	BODY
91	#`668`	BODY
90	▯`5728`	BODY
89	◈`123`	BODY

	
cycle 127
90	▯`5726`	BODY
92	#`96`	BODY
90	▯`5726`	BODY
89	◈`124`	BODY

	
cycle 128
90	▯`5725`	BODY
89	◈`125`	BODY

	
cycle 129
90	▯`5744`	BODY
89	◈`106`	BODY

	
cycle 130
90	▯`5743`	BODY
89	◈`107`	BODY

	
cycle 131
90	▯`5860`	BODY
93	#`754`	BODY
90	▯`5860`	BODY
89	◈`108`	BODY

	
cycle 132
90	▯`5859`	BODY
89	◈`109`	BODY

	
cycle 133
90	▯`5858`	BODY
89	◈`110`	BODY

	
cycle 134
90	▯`5854`	BODY
89	◈`114`	BODY

	
cycle 135
90	▯`5853`	BODY
89	◈`115`	BODY

	
cycle 136
90	▯`5852`	BODY
89	◈`116`	BODY
668	[	BLOCK
754	B	BLOCK

	
cycle 137
90	▯`5851`	BODY
89	◈`117`	BODY

	
cycle 138
90	▯`5847`	BODY
89	◈`121`	BODY

	
cycle 139
90	▯`5846`	BODY
89	◈`122`	BODY

	
cycle 140
90	▯`5844`	BODY
91	#`669`	BODY
90	▯`5844`	BODY
89	◈`123`	BODY

	
cycle 141
90	▯`5842`	BODY
92	#`97`	BODY
90	▯`5842`	BODY
89	◈`124`	BODY

	
cycle 142
90	▯`5841`	BODY
89	◈`125`	BODY

	
cycle 143
90	▯`5860`	BODY
89	◈`106`	BODY

	
cycle 144
90	▯`5859`	BODY
89	◈`107`	BODY

	
cycle 145
90	▯`5827`	BODY
93	#`785`	BODY
90	▯`5827`	BODY
89	◈`108`	BODY

	
cycle 146
90	▯`5826`	BODY
89	◈`109`	BODY

	
cycle 147
90	▯`5825`	BODY
89	◈`110`	BODY

	
cycle 148
90	▯`5821`	BODY
89	◈`114`	BODY

	
cycle 149
90	▯`5820`	BODY
89	◈`115`	BODY

	
cycle 150
90	▯`5819`	BODY
89	◈`116`	BODY
669	t	BLOCK
785	⸘	BLOCK

	
cycle 151
90	▯`5818`	BODY
89	◈`117`	BODY

	
cycle 152
90	▯`5814`	BODY
89	◈`121`	BODY

	
cycle 153
90	▯`5813`	BODY
89	◈`122`	BODY

	
cycle 154
90	▯`5811`	BODY
91	#`670`	BODY
90	▯`5811`	BODY
89	◈`123`	BODY

	
cycle 155
90	▯`5809`	BODY
92	#`98`	BODY
90	▯`5809`	BODY
89	◈`124`	BODY

	
cycle 156
90	▯`5808`	BODY
89	◈`125`	BODY

	
cycle 157
90	▯`5827`	BODY
89	◈`106`	BODY

	
cycle 158
90	▯`5826`	BODY
89	◈`107`	BODY

	
cycle 159
90	▯`5783`	BODY
93	#`827`	BODY
90	▯`5783`	BODY
89	◈`108`	BODY

	
cycle 160
90	▯`5782`	BODY
89	◈`109`	BODY

	
cycle 161
90	▯`5781`	BODY
89	◈`110`	BODY

	
cycle 162
90	▯`5777`	BODY
89	◈`114`	BODY

	
cycle 163
90	▯`5776`	BODY
89	◈`115`	BODY

	
cycle 164
90	▯`5775`	BODY
89	◈`116`	BODY
670	1	BLOCK
827	%	BLOCK

	
cycle 165
90	▯`5774`	BODY
89	◈`117`	BODY

	
cycle 166
90	▯`5770`	BODY
89	◈`121`	BODY

	
cycle 167
90	▯`5769`	BODY
89	◈`122`	BODY

	
cycle 168
90	▯`5767`	BODY
91	#`671`	BODY
90	▯`5767`	BODY
89	◈`123`	BODY

	
cycle 169
90	▯`5765`	BODY
92	#`99`	BODY
90	▯`5765`	BODY
89	◈`124`	BODY

	
cycle 170
90	▯`5764`	BODY
89	◈`125`	BODY

	
cycle 171
90	▯`5783`	BODY
89	◈`106`	BODY

	
cycle 172
90	▯`5782`	BODY
89	◈`107`	BODY

	
cycle 173
90	▯`5879`	BODY
93	#`729`	BODY
90	▯`5879`	BODY
89	◈`108`	BODY

	
cycle 174
90	▯`5878`	BODY
89	◈`109`	BODY

	
cycle 175
90	▯`5877`	BODY
89	◈`110`	BODY

	
cycle 176
90	▯`5873`	BODY
89	◈`114`	BODY

	
cycle 177
90	▯`5872`	BODY
89	◈`115`	BODY

	
cycle 178
90	▯`5871`	BODY
89	◈`116`	BODY
671	]	BLOCK
729	«	BLOCK

	
cycle 179
90	▯`5870`	BODY
89	◈`117`	BODY

	
cycle 180
90	▯`5866`	BODY
89	◈`121`	BODY

	
cycle 181
90	▯`5865`	BODY
89	◈`122`	BODY

	
cycle 182
90	▯`5863`	BODY
91	#`672`	BODY
90	▯`5863`	BODY
89	◈`123`	BODY

	
cycle 183
90	▯`5861`	BODY
92	#`100`	BODY
90	▯`5861`	BODY
89	◈`124`	BODY

	
cycle 184
90	▯`5860`	BODY
89	◈`125`	BODY

	
cycle 185
90	▯`5879`	BODY
89	◈`106`	BODY

	
cycle 186
90	▯`5878`	BODY
89	◈`107`	BODY

	
cycle 187
90	▯`5704`	BODY
93	#`902`	BODY
90	▯`5704`	BODY
89	◈`108`	BODY

	
cycle 188
90	▯`5703`	BODY
89	◈`109`	BODY

	
cycle 189
90	▯`5702`	BODY
89	◈`110`	BODY

	
cycle 190
90	▯`5698`	BODY
89	◈`114`	BODY

	
cycle 191
90	▯`5697`	BODY
89	◈`115`	BODY

	
cycle 192
90	▯`5696`	BODY
89	◈`116`	BODY
672	t	BLOCK
902	 	BLOCK

	
cycle 193
90	▯`5695`	BODY
89	◈`117`	BODY

	
cycle 194
90	▯`5691`	BODY
89	◈`121`	BODY

	
cycle 195
90	▯`5690`	BODY
89	◈`122`	BODY

	
cycle 196
90	▯`5688`	BODY
91	#`673`	BODY
90	▯`5688`	BODY
89	◈`123`	BODY

	
cycle 197
90	▯`5686`	BODY
92	#`101`	BODY
90	▯`5686`	BODY
89	◈`124`	BODY

	
cycle 198
90	▯`5685`	BODY
89	◈`125`	BODY

	
cycle 199
90	▯`5704`	BODY
89	◈`106`	BODY

	
cycle 200
90	▯`5703`	BODY
89	◈`107`	BODY

	
cycle 201
90	▯`5891`	BODY
93	#`713`	BODY
90	▯`5891`	BODY
89	◈`108`	BODY

	
cycle 202
90	▯`5890`	BODY
89	◈`109`	BODY

	
cycle 203
90	▯`5889`	BODY
89	◈`110`	BODY

	
cycle 204
90	▯`5885`	BODY
89	◈`114`	BODY

	
cycle 205
90	▯`5884`	BODY
89	◈`115`	BODY

	
cycle 206
90	▯`5883`	BODY
89	◈`116`	BODY
673	3	BLOCK
713	L	BLOCK

	
cycle 207
90	▯`5882`	BODY
89	◈`117`	BODY

	
cycle 208
90	▯`5878`	BODY
89	◈`121`	BODY

	
cycle 209
90	▯`5877`	BODY
89	◈`122`	BODY

	
cycle 210
90	▯`5875`	BODY
91	#`674`	BODY
90	▯`5875`	BODY
89	◈`123`	BODY

	
cycle 211
90	▯`5873`	BODY
92	#`102`	BODY
90	▯`5873`	BODY
89	◈`124`	BODY

	
cycle 212
90	▯`5872`	BODY
89	◈`125`	BODY

	
cycle 213
90	▯`5891`	BODY
89	◈`106`	BODY

	
cycle 214
90	▯`5890`	BODY
89	◈`107`	BODY

	
cycle 215
90	▯`5809`	BODY
93	#`793`	BODY
90	▯`5809`	BODY
89	◈`108`	BODY

	
cycle 216
90	▯`5808`	BODY
89	◈`109`	BODY

	
cycle 217
90	▯`5807`	BODY
89	◈`110`	BODY

	
cycle 218
90	▯`5803`	BODY
89	◈`114`	BODY

	
cycle 219
90	▯`5802`	BODY
89	◈`115`	BODY

	
cycle 220
90	▯`5801`	BODY
89	◈`116`	BODY
674	r	BLOCK
793	c	BLOCK

	
cycle 221
90	▯`5800`	BODY
89	◈`117`	BODY

	
cycle 222
90	▯`5796`	BODY
89	◈`121`	BODY

	
cycle 223
90	▯`5795`	BODY
89	◈`122`	BODY

	
cycle 224
90	▯`5793`	BODY
91	#`675`	BODY
90	▯`5793`	BODY
89	◈`123`	BODY

	
cycle 225
90	▯`5791`	BODY
92	#`103`	BODY
90	▯`5791`	BODY
89	◈`124`	BODY

	
cycle 226
90	▯`5790`	BODY
89	◈`125`	BODY

	
cycle 227
90	▯`5809`	BODY
89	◈`106`	BODY

	
cycle 228
90	▯`5808`	BODY
89	◈`107`	BODY

	
cycle 229
90	▯`5913`	BODY
93	#`687`	BODY
90	▯`5913`	BODY
89	◈`108`	BODY

	
cycle 230
90	▯`5912`	BODY
89	◈`109`	BODY

	
cycle 231
90	▯`5911`	BODY
89	◈`110`	BODY

	
cycle 232
90	▯`5907`	BODY
89	◈`114`	BODY

	
cycle 233
90	▯`5906`	BODY
89	◈`115`	BODY

	
cycle 234
90	▯`5905`	BODY
89	◈`116`	BODY
675	"	BLOCK
687	?	BLOCK

	
cycle 235
90	▯`5904`	BODY
89	◈`117`	BODY

	
cycle 236
90	▯`5900`	BODY
89	◈`121`	BODY

	
cycle 237
90	▯`5899`	BODY
89	◈`122`	BODY

	
cycle 238
90	▯`5897`	BODY
91	#`676`	BODY
90	▯`5897`	BODY
89	◈`123`	BODY

	
cycle 239
90	▯`5895`	BODY
92	#`104`	BODY
90	▯`5895`	BODY
89	◈`124`	BODY

	
cycle 240
90	▯`5894`	BODY
89	◈`125`	BODY

	
cycle 241
90	▯`5913`	BODY
89	◈`106`	BODY

	
cycle 242
90	▯`5912`	BODY
89	◈`107`	BODY

	
cycle 243
90	▯`5811`	BODY
93	#`787`	BODY
90	▯`5811`	BODY
89	◈`108`	BODY

	
cycle 244
90	▯`5810`	BODY
89	◈`109`	BODY

	
cycle 245
90	▯`5809`	BODY
89	◈`110`	BODY

	
cycle 246
90	▯`5805`	BODY
89	◈`114`	BODY

	
cycle 247
90	▯`5804`	BODY
89	◈`115`	BODY

	
cycle 248
90	▯`5803`	BODY
89	◈`116`	BODY
676	0	BLOCK
787	g	BLOCK

	
cycle 249
90	▯`5802`	BODY
89	◈`117`	BODY

	
cycle 250
90	▯`5798`	BODY
89	◈`121`	BODY

	
cycle 251
90	▯`5797`	BODY
89	◈`122`	BODY

	
cycle 252
90	▯`5795`	BODY
91	#`677`	BODY
90	▯`5795`	BODY
89	◈`123`	BODY

	
cycle 253
90	▯`5793`	BODY
92	#`105`	BODY
90	▯`5793`	BODY
89	◈`124`	BODY

	
cycle 254
90	▯`5792`	BODY
89	◈`125`	BODY

	
cycle 255
90	▯`5811`	BODY
89	◈`106`	BODY

	
cycle 256
90	▯`5810`	BODY
89	◈`107`	BODY

	
cycle 257
90	▯`5745`	BODY
93	#`851`	BODY
90	▯`5745`	BODY
89	◈`108`	BODY

	
cycle 258
90	▯`5744`	BODY
89	◈`109`	BODY

	
cycle 259
90	▯`5743`	BODY
89	◈`110`	BODY

	
cycle 260
90	▯`5739`	BODY
89	◈`114`	BODY

	
cycle 261
90	▯`5738`	BODY
89	◈`115`	BODY

	
cycle 262
90	▯`5737`	BODY
89	◈`116`	BODY
677	4	BLOCK
851	9	BLOCK

	
cycle 263
90	▯`5736`	BODY
89	◈`117`	BODY

	
cycle 264
90	▯`5732`	BODY
89	◈`121`	BODY

	
cycle 265
90	▯`5731`	BODY
89	◈`122`	BODY

	
cycle 266
90	▯`5729`	BODY
91	#`678`	BODY
90	▯`5729`	BODY
89	◈`123`	BODY

	
cycle 267
90	▯`5727`	BODY
92	#`106`	BODY
90	▯`5727`	BODY
89	◈`124`	BODY

	
cycle 268
90	▯`5726`	BODY
89	◈`125`	BODY

	
cycle 269
90	▯`5745`	BODY
89	◈`106`	BODY

	
cycle 270
90	▯`5744`	BODY
89	◈`107`	BODY

	
cycle 271
90	▯`5903`	BODY
93	#`691`	BODY
90	▯`5903`	BODY
89	◈`108`	BODY

	
cycle 272
90	▯`5902`	BODY
89	◈`109`	BODY

	
cycle 273
90	▯`5901`	BODY
89	◈`110`	BODY

	
cycle 274
90	▯`5897`	BODY
89	◈`114`	BODY

	
cycle 275
90	▯`5896`	BODY
89	◈`115`	BODY

	
cycle 276
90	▯`5895`	BODY
89	◈`116`	BODY
678	B	BLOCK
691	l	BLOCK

	
cycle 277
90	▯`5894`	BODY
89	◈`117`	BODY

	
cycle 278
90	▯`5890`	BODY
89	◈`121`	BODY

	
cycle 279
90	▯`5889`	BODY
89	◈`122`	BODY

	
cycle 280
90	▯`5887`	BODY
91	#`679`	BODY
90	▯`5887`	BODY
89	◈`123`	BODY

	
cycle 281
90	▯`5885`	BODY
92	#`107`	BODY
90	▯`5885`	BODY
89	◈`124`	BODY

	
cycle 282
90	▯`5884`	BODY
89	◈`125`	BODY

	
cycle 283
90	▯`5903`	BODY
89	◈`106`	BODY

	
cycle 284
90	▯`5902`	BODY
89	◈`107`	BODY

	
cycle 285
90	▯`5861`	BODY
93	#`731`	BODY
90	▯`5861`	BODY
89	◈`108`	BODY

	
cycle 286
90	▯`5860`	BODY
89	◈`109`	BODY

	
cycle 287
90	▯`5859`	BODY
89	◈`110`	BODY

	
cycle 288
90	▯`5855`	BODY
89	◈`114`	BODY

	
cycle 289
90	▯`5854`	BODY
89	◈`115`	BODY

	
cycle 290
90	▯`5853`	BODY
89	◈`116`	BODY
679	>	BLOCK
731	C	BLOCK

	
cycle 291
90	▯`5852`	BODY
89	◈`117`	BODY

	
cycle 292
90	▯`5848`	BODY
89	◈`121`	BODY

	
cycle 293
90	▯`5847`	BODY
89	◈`122`	BODY

	
cycle 294
90	▯`5845`	BODY
91	#`680`	BODY
90	▯`5845`	BODY
89	◈`123`	BODY

	
cycle 295
90	▯`5843`	BODY
92	#`108`	BODY
90	▯`5843`	BODY
89	◈`124`	BODY

	
cycle 296
90	▯`5842`	BODY
89	◈`125`	BODY

	
cycle 297
90	▯`5861`	BODY
89	◈`106`	BODY

	
cycle 298
90	▯`5860`	BODY
89	◈`107`	BODY

	
cycle 299
90	▯`5882`	BODY
93	#`708`	BODY
90	▯`5882`	BODY
89	◈`108`	BODY

	
cycle 300
90	▯`5881`	BODY
89	◈`109`	BODY

	
cycle 301
90	▯`5880`	BODY
89	◈`110`	BODY

	
cycle 302
90	▯`5876`	BODY
89	◈`114`	BODY

	
cycle 303
90	▯`5875`	BODY
89	◈`115`	BODY

	
cycle 304
90	▯`5874`	BODY
89	◈`116`	BODY
680	‽	BLOCK
708	+	BLOCK

	
cycle 305
90	▯`5873`	BODY
89	◈`117`	BODY

	
cycle 306
90	▯`5869`	BODY
89	◈`121`	BODY

	
cycle 307
90	▯`5868`	BODY
89	◈`122`	BODY

	
cycle 308
90	▯`5866`	BODY
91	#`681`	BODY
90	▯`5866`	BODY
89	◈`123`	BODY

	
cycle 309
90	▯`5864`	BODY
92	#`109`	BODY
90	▯`5864`	BODY
89	◈`124`	BODY

	
cycle 310
90	▯`5863`	BODY
89	◈`125`	BODY

	
cycle 311
90	▯`5882`	BODY
89	◈`106`	BODY

	
cycle 312
90	▯`5881`	BODY
89	◈`107`	BODY

	
cycle 313
90	▯`5905`	BODY
93	#`683`	BODY
90	▯`5905`	BODY
89	◈`108`	BODY

	
cycle 314
90	▯`5904`	BODY
89	◈`109`	BODY

	
cycle 315
90	▯`5903`	BODY
89	◈`110`	BODY

	
cycle 316
90	▯`5899`	BODY
89	◈`114`	BODY

	
cycle 317
90	▯`5898`	BODY
89	◈`115`	BODY

	
cycle 318
90	▯`5897`	BODY
89	◈`116`	BODY
681	2	BLOCK
683	=	BLOCK

	
cycle 319
90	▯`5896`	BODY
89	◈`117`	BODY

	
cycle 320
90	▯`5892`	BODY
89	◈`121`	BODY

	
cycle 321
90	▯`5891`	BODY
89	◈`122`	BODY

	
cycle 322
90	▯`5889`	BODY
91	#`682`	BODY
90	▯`5889`	BODY
89	◈`123`	BODY

	
cycle 323
90	▯`5887`	BODY
92	#`110`	BODY
90	▯`5887`	BODY
89	◈`124`	BODY

	
cycle 324
90	▯`5886`	BODY
89	◈`125`	BODY

	
cycle 325
90	▯`5905`	BODY
89	◈`106`	BODY

	
cycle 326
90	▯`5904`	BODY
89	◈`107`	BODY

	
cycle 327
90	▯`5888`	BODY
93	#`698`	BODY
90	▯`5888`	BODY
89	◈`108`	BODY

	
cycle 328
90	▯`5887`	BODY
89	◈`109`	BODY

	
cycle 329
90	▯`5886`	BODY
89	◈`110`	BODY

	
cycle 330
90	▯`5882`	BODY
89	◈`114`	BODY

	
cycle 331
90	▯`5881`	BODY
89	◈`115`	BODY

	
cycle 332
90	▯`5880`	BODY
89	◈`116`	BODY
682	)	BLOCK
698	I	BLOCK

	
cycle 333
90	▯`5879`	BODY
89	◈`117`	BODY

	
cycle 334
90	▯`5875`	BODY
89	◈`121`	BODY

	
cycle 335
90	▯`5874`	BODY
89	◈`122`	BODY

	
cycle 336
90	▯`5872`	BODY
91	#`683`	BODY
90	▯`5872`	BODY
89	◈`123`	BODY

	
cycle 337
90	▯`5870`	BODY
92	#`111`	BODY
90	▯`5870`	BODY
89	◈`124`	BODY

	
cycle 338
90	▯`5869`	BODY
89	◈`125`	BODY

	
cycle 339
90	▯`5888`	BODY
89	◈`106`	BODY

	
cycle 340
90	▯`5887`	BODY
89	◈`107`	BODY

	
cycle 341
90	▯`5791`	BODY
93	#`793`	BODY
90	▯`5791`	BODY
89	◈`108`	BODY

	
cycle 342
90	▯`5790`	BODY
89	◈`109`	BODY

	
cycle 343
90	▯`5789`	BODY
89	◈`110`	BODY

	
cycle 344
90	▯`5785`	BODY
89	◈`114`	BODY

	
cycle 345
90	▯`5784`	BODY
89	◈`115`	BODY

	
cycle 346
90	▯`5783`	BODY
89	◈`116`	BODY
683	c	BLOCK
793	=	BLOCK

	
cycle 347
90	▯`5782`	BODY
89	◈`117`	BODY

	
cycle 348
90	▯`5778`	BODY
89	◈`121`	BODY

	
cycle 349
90	▯`5777`	BODY
89	◈`122`	BODY

	
cycle 350
90	▯`5775`	BODY
91	#`684`	BODY
90	▯`5775`	BODY
89	◈`123`	BODY

	
cycle 351
90	▯`5773`	BODY
92	#`112`	BODY
90	▯`5773`	BODY
89	◈`124`	BODY

	
cycle 352
90	▯`5772`	BODY
89	◈`125`	BODY

	
cycle 353
90	▯`5791`	BODY
89	◈`106`	BODY

	
cycle 354
90	▯`5790`	BODY
89	◈`107`	BODY

	
cycle 355
90	▯`5896`	BODY
93	#`686`	BODY
90	▯`5896`	BODY
89	◈`108`	BODY

	
cycle 356
90	▯`5895`	BODY
89	◈`109`	BODY

	
cycle 357
90	▯`5894`	BODY
89	◈`110`	BODY

	
cycle 358
90	▯`5890`	BODY
89	◈`114`	BODY

	
cycle 359
90	▯`5889`	BODY
89	◈`115`	BODY

	
cycle 360
90	▯`5888`	BODY
89	◈`116`	BODY
684	(	BLOCK
686	D	BLOCK

	
cycle 361
90	▯`5887`	BODY
89	◈`117`	BODY

	
cycle 362
90	▯`5883`	BODY
89	◈`121`	BODY

	
cycle 363
90	▯`5882`	BODY
89	◈`122`	BODY

	
cycle 364
90	▯`5880`	BODY
91	#`685`	BODY
90	▯`5880`	BODY
89	◈`123`	BODY

	
cycle 365
90	▯`5878`	BODY
92	#`113`	BODY
90	▯`5878`	BODY
89	◈`124`	BODY

	
cycle 366
90	▯`5877`	BODY
89	◈`125`	BODY

	
cycle 367
90	▯`5896`	BODY
89	◈`106`	BODY

	
cycle 368
90	▯`5895`	BODY
89	◈`107`	BODY

	
cycle 369
90	▯`5674`	BODY
93	#`906`	BODY
90	▯`5674`	BODY
89	◈`108`	BODY

	
cycle 370
90	▯`5673`	BODY
89	◈`109`	BODY

	
cycle 371
90	▯`5672`	BODY
89	◈`110`	BODY

	
cycle 372
90	▯`5668`	BODY
89	◈`114`	BODY

	
cycle 373
90	▯`5667`	BODY
89	◈`115`	BODY

	
cycle 374
90	▯`5666`	BODY
89	◈`116`	BODY
685	t	BLOCK
906	M	BLOCK

	
cycle 375
90	▯`5665`	BODY
89	◈`117`	BODY

	
cycle 376
90	▯`5661`	BODY
89	◈`121`	BODY

	
cycle 377
90	▯`5660`	BODY
89	◈`122`	BODY

	
cycle 378
90	▯`5658`	BODY
91	#`686`	BODY
90	▯`5658`	BODY
89	◈`123`	BODY

	
cycle 379
90	▯`5656`	BODY
92	#`114`	BODY
90	▯`5656`	BODY
89	◈`124`	BODY

	
cycle 380
90	▯`5655`	BODY
89	◈`125`	BODY

	
cycle 381
90	▯`5674`	BODY
89	◈`106`	BODY

	
cycle 382
90	▯`5673`	BODY
89	◈`107`	BODY

	
cycle 383
90	▯`5847`	BODY
93	#`731`	BODY
90	▯`5847`	BODY
89	◈`108`	BODY

	
cycle 384
90	▯`5846`	BODY
89	◈`109`	BODY

	
cycle 385
90	▯`5845`	BODY
89	◈`110`	BODY

	
cycle 386
90	▯`5841`	BODY
89	◈`114`	BODY

	
cycle 387
90	▯`5840`	BODY
89	◈`115`	BODY

	
cycle 388
90	▯`5839`	BODY
89	◈`116`	BODY
686	C	BLOCK
731	D	BLOCK

	
cycle 389
90	▯`5838`	BODY
89	◈`117`	BODY

	
cycle 390
90	▯`5834`	BODY
89	◈`121`	BODY

	
cycle 391
90	▯`5833`	BODY
89	◈`122`	BODY

	
cycle 392
90	▯`5831`	BODY
91	#`687`	BODY
90	▯`5831`	BODY
89	◈`123`	BODY

	
cycle 393
90	▯`5829`	BODY
92	#`115`	BODY
90	▯`5829`	BODY
89	◈`124`	BODY

	
cycle 394
90	▯`5828`	BODY
89	◈`125`	BODY

	
cycle 395
90	▯`5847`	BODY
89	◈`106`	BODY

	
cycle 396
90	▯`5846`	BODY
89	◈`107`	BODY

	
cycle 397
90	▯`5622`	BODY
93	#`954`	BODY
90	▯`5622`	BODY
89	◈`108`	BODY

	
cycle 398
90	▯`5621`	BODY
89	◈`109`	BODY

	
cycle 399
90	▯`5620`	BODY
89	◈`110`	BODY

	
cycle 400
90	▯`5616`	BODY
89	◈`114`	BODY

	
cycle 401
90	▯`5615`	BODY
89	◈`115`	BODY

	
cycle 402
90	▯`5614`	BODY
89	◈`116`	BODY
687	$	BLOCK
954	?	BLOCK

	
cycle 403
90	▯`5613`	BODY
89	◈`117`	BODY

	
cycle 404
90	▯`5609`	BODY
89	◈`121`	BODY

	
cycle 405
90	▯`5608`	BODY
89	◈`122`	BODY

	
cycle 406
90	▯`5606`	BODY
91	#`688`	BODY
90	▯`5606`	BODY
89	◈`123`	BODY

	
cycle 407
90	▯`5604`	BODY
92	#`116`	BODY
90	▯`5604`	BODY
89	◈`124`	BODY

	
cycle 408
90	▯`5603`	BODY
89	◈`125`	BODY

	
cycle 409
90	▯`5622`	BODY
89	◈`106`	BODY

	
cycle 410
90	▯`5621`	BODY
89	◈`107`	BODY

	
cycle 411
90	▯`5860`	BODY
93	#`714`	BODY
90	▯`5860`	BODY
89	◈`108`	BODY

	
cycle 412
90	▯`5859`	BODY
89	◈`109`	BODY

	
cycle 413
90	▯`5858`	BODY
89	◈`110`	BODY

	
cycle 414
90	▯`5854`	BODY
89	◈`114`	BODY

	
cycle 415
90	▯`5853`	BODY
89	◈`115`	BODY

	
cycle 416
90	▯`5852`	BODY
89	◈`116`	BODY
688	2	BLOCK
714	i	BLOCK

	
cycle 417
90	▯`5851`	BODY
89	◈`117`	BODY

	
cycle 418
90	▯`5847`	BODY
89	◈`121`	BODY

	
cycle 419
90	▯`5846`	BODY
89	◈`122`	BODY

	
cycle 420
90	▯`5844`	BODY
91	#`689`	BODY
90	▯`5844`	BODY
89	◈`123`	BODY

	
cycle 421
90	▯`5842`	BODY
92	#`117`	BODY
90	▯`5842`	BODY
89	◈`124`	BODY

	
cycle 422
90	▯`5841`	BODY
89	◈`125`	BODY

	
cycle 423
90	▯`5860`	BODY
89	◈`106`	BODY

	
cycle 424
90	▯`5859`	BODY
89	◈`107`	BODY

	
cycle 425
90	▯`5779`	BODY
93	#`793`	BODY
90	▯`5779`	BODY
89	◈`108`	BODY

	
cycle 426
90	▯`5778`	BODY
89	◈`109`	BODY

	
cycle 427
90	▯`5777`	BODY
89	◈`110`	BODY

	
cycle 428
90	▯`5773`	BODY
89	◈`114`	BODY

	
cycle 429
90	▯`5772`	BODY
89	◈`115`	BODY

	
cycle 430
90	▯`5771`	BODY
89	◈`116`	BODY
689	=	BLOCK
793	«	BLOCK

	
cycle 431
90	▯`5770`	BODY
89	◈`117`	BODY

	
cycle 432
90	▯`5766`	BODY
89	◈`121`	BODY

	
cycle 433
90	▯`5765`	BODY
89	◈`122`	BODY

	
cycle 434
90	▯`5763`	BODY
91	#`690`	BODY
90	▯`5763`	BODY
89	◈`123`	BODY

	
cycle 435
90	▯`5761`	BODY
92	#`118`	BODY
90	▯`5761`	BODY
89	◈`124`	BODY

	
cycle 436
90	▯`5760`	BODY
89	◈`125`	BODY

	
cycle 437
90	▯`5779`	BODY
89	◈`106`	BODY

	
cycle 438
90	▯`5778`	BODY
89	◈`107`	BODY

	
cycle 439
90	▯`5730`	BODY
93	#`840`	BODY
90	▯`5730`	BODY
89	◈`108`	BODY

	
cycle 440
90	▯`5729`	BODY
89	◈`109`	BODY

	
cycle 441
90	▯`5728`	BODY
89	◈`110`	BODY

	
cycle 442
90	▯`5724`	BODY
89	◈`114`	BODY

	
cycle 443
90	▯`5723`	BODY
89	◈`115`	BODY

	
cycle 444
90	▯`5722`	BODY
89	◈`116`	BODY
690	1	BLOCK
840	«	BLOCK

	
cycle 445
90	▯`5721`	BODY
89	◈`117`	BODY

	
cycle 446
90	▯`5717`	BODY
89	◈`121`	BODY

	
cycle 447
90	▯`5716`	BODY
89	◈`122`	BODY

	
cycle 448
90	▯`5714`	BODY
91	#`691`	BODY
90	▯`5714`	BODY
89	◈`123`	BODY

	
cycle 449
90	▯`5712`	BODY
92	#`119`	BODY
90	▯`5712`	BODY
89	◈`124`	BODY

	
cycle 450
90	▯`5711`	BODY
89	◈`125`	BODY

	
cycle 451
90	▯`5730`	BODY
89	◈`106`	BODY

	
cycle 452
90	▯`5729`	BODY
89	◈`107`	BODY

	
cycle 453
90	▯`5852`	BODY
93	#`716`	BODY
90	▯`5852`	BODY
89	◈`108`	BODY

	
cycle 454
90	▯`5851`	BODY
89	◈`109`	BODY

	
cycle 455
90	▯`5850`	BODY
89	◈`110`	BODY

	
cycle 456
90	▯`5846`	BODY
89	◈`114`	BODY

	
cycle 457
90	▯`5845`	BODY
89	◈`115`	BODY

	
cycle 458
90	▯`5844`	BODY
89	◈`116`	BODY
691	3	BLOCK
716	l	BLOCK

	
cycle 459
90	▯`5843`	BODY
89	◈`117`	BODY

	
cycle 460
90	▯`5839`	BODY
89	◈`121`	BODY

	
cycle 461
90	▯`5838`	BODY
89	◈`122`	BODY

	
cycle 462
90	▯`5836`	BODY
91	#`692`	BODY
90	▯`5836`	BODY
89	◈`123`	BODY

	
cycle 463
90	▯`5834`	BODY
92	#`120`	BODY
90	▯`5834`	BODY
89	◈`124`	BODY

	
cycle 464
90	▯`5833`	BODY
89	◈`125`	BODY

	
cycle 465
90	▯`5852`	BODY
89	◈`106`	BODY

	
cycle 466
90	▯`5851`	BODY
89	◈`107`	BODY

	
cycle 467
90	▯`5818`	BODY
93	#`748`	BODY
90	▯`5818`	BODY
89	◈`108`	BODY

	
cycle 468
90	▯`5817`	BODY
89	◈`109`	BODY

	
cycle 469
90	▯`5816`	BODY
89	◈`110`	BODY

	
cycle 470
90	▯`5812`	BODY
89	◈`114`	BODY

	
cycle 471
90	▯`5811`	BODY
89	◈`115`	BODY

	
cycle 472
90	▯`5810`	BODY
89	◈`116`	BODY
692	)	BLOCK
748	▯`8191`	BLOCK

	
cycle 473
90	▯`5809`	BODY
89	◈`117`	BODY

	
cycle 474
90	▯`5805`	BODY
89	◈`121`	BODY

	
cycle 475
90	▯`5804`	BODY
89	◈`122`	BODY

	
cycle 476
90	▯`5802`	BODY
91	#`693`	BODY
90	▯`5802`	BODY
89	◈`123`	BODY

	
cycle 477
90	▯`5800`	BODY
92	#`121`	BODY
90	▯`5800`	BODY
89	◈`124`	BODY

	
cycle 478
90	▯`5799`	BODY
89	◈`125`	BODY

	
cycle 479
90	▯`5818`	BODY
89	◈`106`	BODY

	
cycle 480
90	▯`5817`	BODY
89	◈`107`	BODY

	
cycle 481
90	▯`5587`	BODY
93	#`977`	BODY
90	▯`5587`	BODY
89	◈`108`	BODY

	
cycle 482
90	▯`5586`	BODY
89	◈`109`	BODY

	
cycle 483
90	▯`5585`	BODY
89	◈`110`	BODY

	
cycle 484
90	▯`5581`	BODY
89	◈`114`	BODY

	
cycle 485
90	▯`5580`	BODY
89	◈`115`	BODY

	
cycle 486
90	▯`5579`	BODY
89	◈`116`	BODY
693	d	BLOCK
977	h	BLOCK

	
cycle 487
90	▯`5578`	BODY
89	◈`117`	BODY

	
cycle 488
90	▯`5574`	BODY
89	◈`121`	BODY

	
cycle 489
90	▯`5573`	BODY
89	◈`122`	BODY

	
cycle 490
90	▯`5571`	BODY
91	#`694`	BODY
90	▯`5571`	BODY
89	◈`123`	BODY

	
cycle 491
90	▯`5569`	BODY
92	#`122`	BODY
90	▯`5569`	BODY
89	◈`124`	BODY

	
cycle 492
90	▯`5568`	BODY
89	◈`125`	BODY

	
cycle 493
90	▯`5587`	BODY
89	◈`106`	BODY

	
cycle 494
90	▯`5586`	BODY
89	◈`107`	BODY

	
cycle 495
90	▯`5810`	BODY
93	#`752`	BODY
90	▯`5810`	BODY
89	◈`108`	BODY

	
cycle 496
90	▯`5809`	BODY
89	◈`109`	BODY

	
cycle 497
90	▯`5808`	BODY
89	◈`110`	BODY

	
cycle 498
90	▯`5804`	BODY
89	◈`114`	BODY

	
cycle 499
90	▯`5803`	BODY
89	◈`115`	BODY

	
cycle 500
90	▯`5802`	BODY
89	◈`116`	BODY
694	^	BLOCK
752	x	BLOCK

	
cycle 501
90	▯`5801`	BODY
89	◈`117`	BODY

	
cycle 502
90	▯`5797`	BODY
89	◈`121`	BODY

	
cycle 503
90	▯`5796`	BODY
89	◈`122`	BODY

	
cycle 504
90	▯`5794`	BODY
91	#`695`	BODY
90	▯`5794`	BODY
89	◈`123`	BODY

	
cycle 505
90	▯`5792`	BODY
92	#`123`	BODY
90	▯`5792`	BODY
89	◈`124`	BODY

	
cycle 506
90	▯`5791`	BODY
89	◈`125`	BODY

	
cycle 507
90	▯`5810`	BODY
89	◈`106`	BODY

	
cycle 508
90	▯`5809`	BODY
89	◈`107`	BODY

	
cycle 509
90	▯`5723`	BODY
93	#`837`	BODY
90	▯`5723`	BODY
89	◈`108`	BODY

	
cycle 510
90	▯`5722`	BODY
89	◈`109`	BODY

	
cycle 511
90	▯`5721`	BODY
89	◈`110`	BODY

	
cycle 512
90	▯`5717`	BODY
89	◈`114`	BODY

	
cycle 513
90	▯`5716`	BODY
89	◈`115`	BODY

	
cycle 514
90	▯`5715`	BODY
89	◈`116`	BODY
695	^	BLOCK
837	B	BLOCK

	
cycle 515
90	▯`5714`	BODY
89	◈`117`	BODY

	
cycle 516
90	▯`5710`	BODY
89	◈`121`	BODY

	
cycle 517
90	▯`5709`	BODY
89	◈`122`	BODY

	
cycle 518
90	▯`5707`	BODY
91	#`696`	BODY
90	▯`5707`	BODY
89	◈`123`	BODY

	
cycle 519
90	▯`5705`	BODY
92	#`124`	BODY
90	▯`5705`	BODY
89	◈`124`	BODY

	
cycle 520
90	▯`5704`	BODY
89	◈`125`	BODY

	
cycle 521
90	▯`5723`	BODY
89	◈`106`	BODY

	
cycle 522
90	▯`5722`	BODY
89	◈`107`	BODY

	
cycle 523
90	▯`5659`	BODY
93	#`899`	BODY
90	▯`5659`	BODY
89	◈`108`	BODY

	
cycle 524
90	▯`5658`	BODY
89	◈`109`	BODY

	
cycle 525
90	▯`5657`	BODY
89	◈`110`	BODY

	
cycle 526
90	▯`5653`	BODY
89	◈`114`	BODY

	
cycle 527
90	▯`5652`	BODY
89	◈`115`	BODY

	
cycle 528
90	▯`5651`	BODY
89	◈`116`	BODY
696	1	BLOCK
899	g	BLOCK

	
cycle 529
90	▯`5650`	BODY
89	◈`117`	BODY

	
cycle 530
90	▯`5646`	BODY
89	◈`121`	BODY

	
cycle 531
90	▯`5645`	BODY
89	◈`122`	BODY

	
cycle 532
90	▯`5643`	BODY
91	#`697`	BODY
90	▯`5643`	BODY
89	◈`123`	BODY

	
cycle 533
90	▯`5641`	BODY
92	#`125`	BODY
90	▯`5641`	BODY
89	◈`124`	BODY

	
cycle 534
90	▯`5640`	BODY
89	◈`125`	BODY

	
cycle 535
90	▯`5659`	BODY
89	◈`106`	BODY

	
cycle 536
90	▯`5658`	BODY
89	◈`107`	BODY

	
cycle 537
90	▯`5791`	BODY
93	#`765`	BODY
90	▯`5791`	BODY
89	◈`108`	BODY

	
cycle 538
90	▯`5790`	BODY
89	◈`109`	BODY

	
cycle 539
90	▯`5789`	BODY
89	◈`110`	BODY

	
cycle 540
90	▯`5785`	BODY
89	◈`114`	BODY

	
cycle 541
90	▯`5784`	BODY
89	◈`115`	BODY

	
cycle 542
90	▯`5783`	BODY
89	◈`116`	BODY
697	(	BLOCK
765	9	BLOCK

	
cycle 543
90	▯`5782`	BODY
89	◈`117`	BODY

	
cycle 544
90	▯`5778`	BODY
89	◈`121`	BODY

	
cycle 545
90	▯`5777`	BODY
89	◈`122`	BODY

	
cycle 546
90	▯`5775`	BODY
91	#`698`	BODY
90	▯`5775`	BODY
89	◈`123`	BODY

	
cycle 547
90	▯`5773`	BODY
92	#`126`	BODY
90	▯`5773`	BODY
89	◈`124`	BODY

	
cycle 548
90	▯`5772`	BODY
89	◈`125`	BODY

	
cycle 549
90	▯`5791`	BODY
89	◈`106`	BODY

	
cycle 550
90	▯`5790`	BODY
89	◈`107`	BODY

	
cycle 551
90	▯`5781`	BODY
93	#`773`	BODY
90	▯`5781`	BODY
89	◈`108`	BODY

	
cycle 552
90	▯`5780`	BODY
89	◈`109`	BODY

	
cycle 553
90	▯`5779`	BODY
89	◈`110`	BODY

	
cycle 554
90	▯`5775`	BODY
89	◈`114`	BODY

	
cycle 555
90	▯`5774`	BODY
89	◈`115`	BODY

	
cycle 556
90	▯`5773`	BODY
89	◈`116`	BODY
698	b	BLOCK
773	I	BLOCK

	
cycle 557
90	▯`5772`	BODY
89	◈`117`	BODY

	
cycle 558
90	▯`5768`	BODY
89	◈`121`	BODY

	
cycle 559
90	▯`5767`	BODY
89	◈`122`	BODY

	
cycle 560
90	▯`5765`	BODY
91	#`699`	BODY
90	▯`5765`	BODY
89	◈`123`	BODY

	
cycle 561
90	▯`5763`	BODY
92	#`127`	BODY
90	▯`5763`	BODY
89	◈`124`	BODY

	
cycle 562
90	▯`5762`	BODY
89	◈`125`	BODY

	
cycle 563
90	▯`5781`	BODY
89	◈`106`	BODY

	
cycle 564
90	▯`5780`	BODY
89	◈`107`	BODY

	
cycle 565
90	▯`5831`	BODY
93	#`721`	BODY
90	▯`5831`	BODY
89	◈`108`	BODY

	
cycle 566
90	▯`5830`	BODY
89	◈`109`	BODY

	
cycle 567
90	▯`5829`	BODY
89	◈`110`	BODY

	
cycle 568
90	▯`5825`	BODY
89	◈`114`	BODY

	
cycle 569
90	▯`5824`	BODY
89	◈`115`	BODY

	
cycle 570
90	▯`5823`	BODY
89	◈`116`	BODY
699	D	BLOCK
721	x	BLOCK

	
cycle 571
90	▯`5822`	BODY
89	◈`117`	BODY

	
cycle 572
90	▯`5818`	BODY
89	◈`121`	BODY

	
cycle 573
90	▯`5817`	BODY
89	◈`122`	BODY

	
cycle 574
90	▯`5815`	BODY
91	#`700`	BODY
90	▯`5815`	BODY
89	◈`123`	BODY

	
cycle 575
90	▯`5813`	BODY
92	#`128`	BODY
90	▯`5813`	BODY
89	◈`124`	BODY

	
cycle 576
90	▯`5812`	BODY
89	◈`125`	BODY

	
cycle 577
90	▯`5831`	BODY
89	◈`106`	BODY

	
cycle 578
90	▯`5830`	BODY
89	◈`107`	BODY

	
cycle 579
90	▯`5685`	BODY
93	#`865`	BODY
90	▯`5685`	BODY
89	◈`108`	BODY

	
cycle 580
90	▯`5684`	BODY
89	◈`109`	BODY

	
cycle 581
90	▯`5683`	BODY
89	◈`110`	BODY

	
cycle 582
90	▯`5679`	BODY
89	◈`114`	BODY

	
cycle 583
90	▯`5678`	BODY
89	◈`115`	BODY

	
cycle 584
90	▯`5677`	BODY
89	◈`116`	BODY
700	^	BLOCK
865	↓	BLOCK

	
cycle 585
90	▯`5676`	BODY
89	◈`117`	BODY

	
cycle 586
90	▯`5672`	BODY
89	◈`121`	BODY

	
cycle 587
90	▯`5671`	BODY
89	◈`122`	BODY

	
cycle 588
90	▯`5669`	BODY
91	#`701`	BODY
90	▯`5669`	BODY
89	◈`123`	BODY

	
cycle 589
90	▯`5667`	BODY
92	#`129`	BODY
90	▯`5667`	BODY
89	◈`124`	BODY

	
cycle 590
90	▯`5666`	BODY
89	◈`125`	BODY

	
cycle 591
90	▯`5685`	BODY
89	◈`106`	BODY

	
cycle 592
90	▯`5684`	BODY
89	◈`107`	BODY

	
cycle 593
90	▯`6548`	BODY
90	▯`6548`	BODY
89	◈`108`	BODY
93	_`None`	BLOCK

	
cycle 594
90	▯`6545`	BODY
89	◈`111`	BODY

	
cycle 595
90	▯`6544`	BODY
89	◈`112`	BODY

	
cycle 596
90	▯`6568`	BODY
89	◈`88`	BODY

	
cycle 597
90	▯`6567`	BODY
89	◈`89`	BODY

	
cycle 598
90	▯`6566`	BODY
89	◈`90`	BODY

	
cycle 599
90	▯`6565`	BODY
89	◈`91`	BODY

	
cycle 600
90	▯`7265`	BODY
91	#`0`	BODY
90	▯`7265`	BODY
89	◈`92`	BODY

	
cycle 601
90	▯`7393`	BODY
92	#`0`	BODY
90	▯`7393`	BODY
89	◈`93`	BODY

	
cycle 602
90	▯`7392`	BODY
90	▯`7392`	BODY
89	◈`94`	BODY
93	#`0`	BLOCK

	
cycle 603
90	▯`7525`	BODY
94	#`0`	BODY
90	▯`7525`	BODY
89	◈`95`	BODY

	
cycle 604
90	▯`8184`	BODY
95	#`0`	BODY
90	▯`8184`	BODY
89	◈`96`	BODY

	
cycle 605
90	▯`8095`	BODY
92	#`88`	BODY
90	▯`8095`	BODY
89	◈`97`	BODY

	
cycle 606
90	▯`8094`	BODY
89	◈`98`	BODY

	
cycle 607
90	▯`8093`	BODY
89	◈`99`	BODY

	
cycle 608
90	▯`7958`	BODY
94	#`134`	BODY
90	▯`7958`	BODY
89	◈`100`	BODY

	
cycle 609
90	▯`7957`	BODY
89	◈`101`	BODY

	
cycle 610
90	▯`7956`	BODY
89	◈`102`	BODY

	
cycle 611
90	▯`6998`	BODY
91	#`957`	BODY
90	▯`6998`	BODY
89	◈`103`	BODY

	
cycle 612
90	▯`6040`	BODY
95	#`957`	BODY
90	▯`6040`	BODY
89	◈`104`	BODY

	
cycle 613
90	▯`6039`	BODY
89	◈`105`	BODY

	
cycle 614
90	▯`6038`	BODY
89	◈`106`	BODY

	
cycle 615
90	▯`6037`	BODY
89	◈`107`	BODY

	
cycle 616
90	▯`5076`	BODY
93	#`960`	BODY
90	▯`5076`	BODY
89	◈`108`	BODY

	
cycle 617
90	▯`5075`	BODY
89	◈`109`	BODY

	
cycle 618
90	▯`5074`	BODY
89	◈`110`	BODY

	
cycle 619
90	▯`5070`	BODY
89	◈`114`	BODY

	
cycle 620
90	▯`5069`	BODY
89	◈`115`	BODY

	
cycle 621
90	▯`5068`	BODY
89	◈`116`	BODY
957	T	BLOCK
960	⸘	BLOCK

	
cycle 622
90	▯`5067`	BODY
89	◈`117`	BODY

	
cycle 623
90	▯`5063`	BODY
89	◈`121`	BODY

	
cycle 624
90	▯`5062`	BODY
89	◈`122`	BODY

	
cycle 625
90	▯`5060`	BODY
91	#`958`	BODY
90	▯`5060`	BODY
89	◈`123`	BODY

	
cycle 626
90	▯`5058`	BODY
92	#`89`	BODY
90	▯`5058`	BODY
89	◈`124`	BODY

	
cycle 627
90	▯`5057`	BODY
89	◈`125`	BODY

	
cycle 628
90	▯`5076`	BODY
89	◈`106`	BODY

	
cycle 629
90	▯`5075`	BODY
89	◈`107`	BODY

	
cycle 630
90	▯`6034`	BODY
90	▯`6034`	BODY
89	◈`108`	BODY
93	_`None`	BLOCK

	
cycle 631
90	▯`6031`	BODY
89	◈`111`	BODY

	
cycle 632
90	▯`6030`	BODY
89	◈`112`	BODY

	
cycle 633
90	▯`6054`	BODY
89	◈`88`	BODY

	
cycle 634
90	▯`6053`	BODY
89	◈`89`	BODY

	
cycle 635
90	▯`6052`	BODY
89	◈`90`	BODY

	
cycle 636
90	▯`6051`	BODY
89	◈`91`	BODY

	
cycle 637
90	▯`7008`	BODY
91	#`0`	BODY
90	▯`7008`	BODY
89	◈`92`	BODY

	
cycle 638
90	▯`7096`	BODY
92	#`0`	BODY
90	▯`7096`	BODY
89	◈`93`	BODY

	
cycle 639
90	▯`7095`	BODY
90	▯`7095`	BODY
89	◈`94`	BODY
93	#`0`	BLOCK

	
cycle 640
90	▯`7228`	BODY
94	#`0`	BODY
90	▯`7228`	BODY
89	◈`95`	BODY

	
cycle 641
90	▯`8184`	BODY
95	#`0`	BODY
90	▯`8184`	BODY
89	◈`96`	BODY

	
cycle 642
90	▯`8095`	BODY
92	#`88`	BODY
90	▯`8095`	BODY
89	◈`97`	BODY

	
cycle 643
90	▯`8094`	BODY
89	◈`98`	BODY

	
cycle 644
90	▯`8093`	BODY
89	◈`99`	BODY

	
cycle 645
90	▯`7958`	BODY
94	#`134`	BODY
90	▯`7958`	BODY
89	◈`100`	BODY

	
cycle 646
90	▯`7957`	BODY
89	◈`101`	BODY

	
cycle 647
90	▯`7956`	BODY
89	◈`102`	BODY

	
cycle 648
90	▯`7774`	BODY
91	#`181`	BODY
90	▯`7774`	BODY
89	◈`103`	BODY

	
cycle 649
90	▯`7592`	BODY
95	#`181`	BODY
90	▯`7592`	BODY
89	◈`104`	BODY

	
cycle 650
90	▯`7591`	BODY
89	◈`105`	BODY

	
cycle 651
90	▯`7590`	BODY
89	◈`106`	BODY

	
cycle 652
90	▯`7589`	BODY
89	◈`107`	BODY

	
cycle 653
90	▯`7317`	BODY
93	#`271`	BODY
90	▯`7317`	BODY
89	◈`108`	BODY

	
cycle 654
90	▯`7316`	BODY
89	◈`109`	BODY

	
cycle 655
90	▯`7315`	BODY
89	◈`110`	BODY

	
cycle 656
90	▯`7311`	BODY
89	◈`114`	BODY

	
cycle 657
90	▯`7310`	BODY
89	◈`115`	BODY

	
cycle 658
90	▯`7309`	BODY
89	◈`116`	BODY
181	T	BLOCK
271	C	BLOCK

	
cycle 659
90	▯`7308`	BODY
89	◈`117`	BODY

	
cycle 660
90	▯`7304`	BODY
89	◈`121`	BODY

	
cycle 661
90	▯`7303`	BODY
89	◈`122`	BODY

	
cycle 662
90	▯`7301`	BODY
91	#`182`	BODY
90	▯`7301`	BODY
89	◈`123`	BODY

	
cycle 663
90	▯`7299`	BODY
92	#`89`	BODY
90	▯`7299`	BODY
89	◈`124`	BODY

	
cycle 664
90	▯`7298`	BODY
89	◈`125`	BODY

	
cycle 665
90	▯`7317`	BODY
89	◈`106`	BODY

	
cycle 666
90	▯`7316`	BODY
89	◈`107`	BODY

	
cycle 667
90	▯`7400`	BODY
93	#`186`	BODY
90	▯`7400`	BODY
89	◈`108`	BODY

	
cycle 668
90	▯`7399`	BODY
89	◈`109`	BODY

	
cycle 669
90	▯`7398`	BODY
89	◈`110`	BODY

	
cycle 670
90	▯`7394`	BODY
89	◈`114`	BODY

	
cycle 671
90	▯`7393`	BODY
89	◈`115`	BODY

	
cycle 672
90	▯`7392`	BODY
89	◈`116`	BODY
182	◇`None`	BLOCK
186	t	BLOCK

	
cycle 673
90	▯`7391`	BODY
89	◈`117`	BODY

	
cycle 674
90	▯`7387`	BODY
89	◈`121`	BODY

	
cycle 675
90	▯`7386`	BODY
89	◈`122`	BODY

	
cycle 676
90	▯`7384`	BODY
91	#`183`	BODY
90	▯`7384`	BODY
89	◈`123`	BODY

	
cycle 677
90	▯`7382`	BODY
92	#`90`	BODY
90	▯`7382`	BODY
89	◈`124`	BODY

	
cycle 678
90	▯`7381`	BODY
89	◈`125`	BODY

	
cycle 679
90	▯`7400`	BODY
89	◈`106`	BODY

	
cycle 680
90	▯`7399`	BODY
89	◈`107`	BODY

	
cycle 681
90	▯`7188`	BODY
93	#`396`	BODY
90	▯`7188`	BODY
89	◈`108`	BODY

	
cycle 682
90	▯`7187`	BODY
89	◈`109`	BODY

	
cycle 683
90	▯`7186`	BODY
89	◈`110`	BODY

	
cycle 684
90	▯`7182`	BODY
89	◈`114`	BODY

	
cycle 685
90	▯`7181`	BODY
89	◈`115`	BODY

	
cycle 686
90	▯`7180`	BODY
89	◈`116`	BODY
183	▯`8191`	BLOCK
396	"	BLOCK

	
cycle 687
90	▯`7179`	BODY
89	◈`117`	BODY

	
cycle 688
90	▯`7175`	BODY
89	◈`121`	BODY

	
cycle 689
90	▯`7174`	BODY
89	◈`122`	BODY

	
cycle 690
90	▯`7172`	BODY
91	#`184`	BODY
90	▯`7172`	BODY
89	◈`123`	BODY
